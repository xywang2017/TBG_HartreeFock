using PyPlot
using JLD2
fpath = pwd() 
include(joinpath(fpath,"B0/libs/DensityMatrix_reduction.jl"))
include(joinpath(fpath,"B0/libs/plot_helpers.jl"))

# ------------------ Load Hartree Fock results ------------------ #
prefix = 1
flag = "random"
phi = 0
strain = 2
ν = -2.0
νstr = round(Int,1000*ν)
lk = 20
latt = Lattice()
initLattice(latt,params;lk=lk)
kvec = reshape(latt.k1,:,1) .+ 1im*reshape(latt.k2,1,:)
hf_path = joinpath(fpath,"feldman/B0/data/strain$(strain)/phi$(phi)/$(prefix)_$(flag)_hf_$(νstr)_lk$(lk).jld2")
hf = load(hf_path,"hf");
println("HF convergence: ",load(hf_path,"iter_err")[end])

# ---------------- Density Matrix analysis ---------------- # 
dm = constructDensityMat(hf);
# checkReconstructionValidity(dm,collect(52:64))
plot_contour_maps(kvec,reshape(dm.φs[64,:],lk,lk),points=ComplexF64[0+0im],contourlines=[100.],limits=Float64[])

# ----------------------- Plot all density matrix coefficients in the format of γiτjsk
plot_density_maps_collectivev0(kvec,collect(reshape(dm.δs,4,4,4,lk,lk)),
            points=[0.0+0.0im],contourlines=Float64[],limits=Float64[])

